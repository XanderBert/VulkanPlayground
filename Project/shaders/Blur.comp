#version 450

layout(push_constant) uniform constants {
    mat4 projMatrix;
} push;




layout(set = 1, binding = 0) uniform sampler2D ssao;
layout(set = 1, binding = 1) uniform sampler2D depth_4;
layout(set = 1, binding = 2, rgba8) uniform image2D blurredOutput;


const float gaussWeightsSigma1[7] =
{
    0.00598f,
    0.060626f,
    0.241843f,
    0.383103f,
    0.241843f,
    0.060626f,
    0.00598f
};

const float gaussWeightsSigma3[7] =
{
    0.106595f,
    0.140367f,
    0.165569f,
    0.174938f,
    0.165569f,
    0.140367f,
    0.106595f
};

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;
void main()
{
    const float pixelOffset = 1.0f / 1024.0f;

    ivec2 texCoord = ivec2(gl_GlobalInvocationID.xy);
    vec2 normalizedTexCoord = vec2(texCoord) / vec2(imageSize(blurredOutput));

    float sum = 0.0f;
    float weightsSum = 0.0f;

    float depth = texture(depth_4, normalizedTexCoord).x;

    for (int i = -3; i <= 3; i++)
    {
        vec2 sampleTexCoord = normalizedTexCoord + i * pixelOffset;
        float sampleDepth = texture(depth_4, sampleTexCoord).x;

        float depthsDiff = 0.1f * abs(depth - sampleDepth);
        depthsDiff *= depthsDiff;
        float weight = 1.0f / (depthsDiff + 0.001f);

        weight *= gaussWeightsSigma3[3 + i];


        sum += weight * texture(ssao, sampleTexCoord).x;
        weightsSum += weight;
    }

    imageStore(blurredOutput, ivec2(texCoord), vec4(sum / weightsSum));
}